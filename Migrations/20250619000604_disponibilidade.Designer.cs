// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PAM_MB_API.Data;

#nullable disable

namespace PAM_MB_API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250619000604_disponibilidade")]
    partial class disponibilidade
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PAM_MB_API.Models.Disponibilidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("Data")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("Hora")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("TB_DISPONIBILIDADE", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Data = new DateOnly(2000, 5, 15),
                            Hora = new TimeOnly(14, 20, 0)
                        },
                        new
                        {
                            Id = 2,
                            Data = new DateOnly(2000, 5, 15),
                            Hora = new TimeOnly(19, 20, 0)
                        });
                });

            modelBuilder.Entity("PAM_MB_API.Models.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("TB_GENERO", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Contry"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Pop"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Rap"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Funk"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Pagode"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "R&B"
                        });
                });

            modelBuilder.Entity("PAM_MB_API.Models.Instrumento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("TB_INSTRUMENTO", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Saxofone"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Guitarra"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Cavaco"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Violão"
                        });
                });

            modelBuilder.Entity("PAM_MB_API.Models.Musico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apelido")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<int>("Classe")
                        .HasColumnType("int");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId")
                        .IsUnique();

                    b.ToTable("TB_MUSICOS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Apelido = "Jeff",
                            Classe = 1,
                            Cpf = "234.234.234-23",
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("PAM_MB_API.Models.MusicoDisponibilidade", b =>
                {
                    b.Property<int>("MusicoId")
                        .HasColumnType("int");

                    b.Property<int>("DisponibilidadeId")
                        .HasColumnType("int");

                    b.HasKey("MusicoId", "DisponibilidadeId");

                    b.HasIndex("DisponibilidadeId");

                    b.ToTable("TB_MUSICO_DISPONIBILIDADE", (string)null);

                    b.HasData(
                        new
                        {
                            MusicoId = 1,
                            DisponibilidadeId = 1
                        },
                        new
                        {
                            MusicoId = 1,
                            DisponibilidadeId = 2
                        });
                });

            modelBuilder.Entity("PAM_MB_API.Models.MusicoGenero", b =>
                {
                    b.Property<int>("MusicoId")
                        .HasColumnType("int");

                    b.Property<int>("GeneroId")
                        .HasColumnType("int");

                    b.HasKey("MusicoId", "GeneroId");

                    b.HasIndex("GeneroId");

                    b.ToTable("TB_MUSICO_GENERO", (string)null);

                    b.HasData(
                        new
                        {
                            MusicoId = 1,
                            GeneroId = 1
                        },
                        new
                        {
                            MusicoId = 1,
                            GeneroId = 2
                        },
                        new
                        {
                            MusicoId = 1,
                            GeneroId = 3
                        },
                        new
                        {
                            MusicoId = 1,
                            GeneroId = 4
                        },
                        new
                        {
                            MusicoId = 1,
                            GeneroId = 5
                        },
                        new
                        {
                            MusicoId = 1,
                            GeneroId = 6
                        });
                });

            modelBuilder.Entity("PAM_MB_API.Models.MusicoInstrumento", b =>
                {
                    b.Property<int>("MusicoId")
                        .HasColumnType("int");

                    b.Property<int>("InstrumentoId")
                        .HasColumnType("int");

                    b.HasKey("MusicoId", "InstrumentoId");

                    b.HasIndex("InstrumentoId");

                    b.ToTable("TB_MUSICO_INSTRUMENTO", (string)null);

                    b.HasData(
                        new
                        {
                            MusicoId = 1,
                            InstrumentoId = 1
                        },
                        new
                        {
                            MusicoId = 1,
                            InstrumentoId = 2
                        });
                });

            modelBuilder.Entity("PAM_MB_API.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<byte[]>("FotoPerfil")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar");

                    b.HasKey("Id");

                    b.ToTable("TB_USUARIOS", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Bio = "Guitarrista solo",
                            DataCriacao = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jeff@email.com",
                            Endereco = "Rua Teste",
                            Nome = "Jefferson",
                            Senha = "123456",
                            Telefone = "11999999999"
                        });
                });

            modelBuilder.Entity("PAM_MB_API.Models.Musico", b =>
                {
                    b.HasOne("PAM_MB_API.Models.Usuario", "Usuario")
                        .WithOne("Musico")
                        .HasForeignKey("PAM_MB_API.Models.Musico", "UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PAM_MB_API.Models.MusicoDisponibilidade", b =>
                {
                    b.HasOne("PAM_MB_API.Models.Disponibilidade", "disponibilidade")
                        .WithMany("musicodisponibilidade")
                        .HasForeignKey("DisponibilidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PAM_MB_API.Models.Musico", "musico")
                        .WithMany("musicodisponibilidade")
                        .HasForeignKey("MusicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("disponibilidade");

                    b.Navigation("musico");
                });

            modelBuilder.Entity("PAM_MB_API.Models.MusicoGenero", b =>
                {
                    b.HasOne("PAM_MB_API.Models.Genero", "genero")
                        .WithMany("musicogenero")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PAM_MB_API.Models.Musico", "musico")
                        .WithMany("musicogenero")
                        .HasForeignKey("MusicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("genero");

                    b.Navigation("musico");
                });

            modelBuilder.Entity("PAM_MB_API.Models.MusicoInstrumento", b =>
                {
                    b.HasOne("PAM_MB_API.Models.Instrumento", "instrumento")
                        .WithMany("musicoinstrumento")
                        .HasForeignKey("InstrumentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PAM_MB_API.Models.Musico", "musico")
                        .WithMany("musicoinstrumento")
                        .HasForeignKey("MusicoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("instrumento");

                    b.Navigation("musico");
                });

            modelBuilder.Entity("PAM_MB_API.Models.Disponibilidade", b =>
                {
                    b.Navigation("musicodisponibilidade");
                });

            modelBuilder.Entity("PAM_MB_API.Models.Genero", b =>
                {
                    b.Navigation("musicogenero");
                });

            modelBuilder.Entity("PAM_MB_API.Models.Instrumento", b =>
                {
                    b.Navigation("musicoinstrumento");
                });

            modelBuilder.Entity("PAM_MB_API.Models.Musico", b =>
                {
                    b.Navigation("musicodisponibilidade");

                    b.Navigation("musicogenero");

                    b.Navigation("musicoinstrumento");
                });

            modelBuilder.Entity("PAM_MB_API.Models.Usuario", b =>
                {
                    b.Navigation("Musico")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
